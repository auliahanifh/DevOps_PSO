name: Laravel CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  laravel-tests:
    name: Laravel Test Suite
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
          MYSQL_DATABASE: trial_laravel
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: mbstring, bcmath, pdo, pdo_mysql, dom, fileinfo, ctype, xml, tokenizer
        coverage: none
        ini-values: memory_limit=2G

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Copy Environment Files
      run: |
        cp .env.example .env
        cp .env.example .env.testing

    - name: Install Composer Dependencies
      run: |
        composer install --no-progress --prefer-dist --optimize-autoloader
        composer require --dev brianium/paratest

    - name: Configure Environment Testing
      run: |
        sed -i 's|APP_URL=.*|APP_URL=http://localhost|' .env.testing
        sed -i 's|DB_HOST=.*|DB_HOST=127.0.0.1|' .env.testing
        sed -i 's|DB_DATABASE=.*|DB_DATABASE=trial_laravel|' .env.testing
        sed -i 's|DB_USERNAME=.*|DB_USERNAME=root|' .env.testing
        sed -i 's|DB_PASSWORD=.*|DB_PASSWORD=|' .env.testing

    - name: Generate Application Key
      run: |
        php artisan key:generate
        php artisan key:generate --env=testing

    - name: Database Setup
      run: |
        php artisan config:clear
        php artisan cache:clear
        mysql -h 127.0.0.1 -uroot < trial_laravel.sql

    - name: Run Tests
      run: |
        if [ -f ./vendor/bin/pest ]; then
          ./vendor/bin/pest --parallel
        else
          php artisan test --parallel
        fi

    - name: Configure Environment for Deployment
      run: |
        sed -i 's|APP_URL=.*|APP_URL=http://localhost|' .env
        sed -i 's|APP_ENV=.*|APP_ENV=local|' .env
        sed -i 's|DB_HOST=.*|DB_HOST=${{ secrets.DB_HOST }}|' .env
        sed -i 's|DB_DATABASE=.*|DB_DATABASE=${{ secrets.DB_DATABASE }}|' .env
        sed -i 's|DB_USERNAME=.*|DB_USERNAME=${{ secrets.DB_USERNAME }}|' .env
        sed -i 's|DB_PASSWORD=.*|DB_PASSWORD=${{ secrets.DB_PASSWORD }}|' .env

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Registry
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Landing Page Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/devops-pso:laravel-app